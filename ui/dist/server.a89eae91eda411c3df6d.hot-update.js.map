{"version":3,"sources":["webpack:///./src/IssueEdit.jsx"],"names":["IssueEdit","React","Component","fetchData","match","search","showError","query","params","id","result","graphQLFetch","parseInt","constructor","issue","store","initialData","state","invalidFields","showingValidation","onChange","bind","handleSubmit","onValidityChange","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","props","event","valid","name","target","setState","prevState","naturalValue","value","textValue","undefined","e","preventDefault","showValidation","Object","keys","length","created","changes","data","issueUpdate","showSuccess","dismissValidation","message","toastVisible","toastMessage","toastType","dismissToast","render","propsId","title","status","owner","effort","description","due","validationMessage","ControlLabel","toDateString","TextInput","NumInput","DateInput"],"mappings":"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","file":"server.a89eae91eda411c3df6d.hot-update.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Col, Panel, Form, FormGroup, FormControl, ControlLabel,\n  ButtonToolbar, Button, Alert,\n} from 'react-bootstrap';\nimport graphQLFetch from './graphQLFetch.js';\nimport NumInput from './NumInput.jsx';\nimport DateInput from './DateInput.jsx';\nimport TextInput from './TextInput.jsx';\nimport withToast from './withToast.jsx';\nimport store from './store.js';\n\nclass IssueEdit extends React.Component {\n  static async fetchData(match, search, showError) {\n    const query = `query issue($id: Int!) {\n      issue(id: $id) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n\n    const { params: { id } } = match;\n    const result = await graphQLFetch(query, { id: parseInt(id, 10) }, showError);\n    return result;\n  }\n\n  constructor() {\n    super();\n    const issue = store.initialData ? store.initialData.issue : null;\n    delete store.initialData;\n    this.state = {\n      issue,\n      invalidFields: {},\n      showingValidation: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { issue } = this.state;\n    if (issue == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match: { params: { id: prevId } } } = prevProps;\n    const { match: { params: { id } } } = this.props;\n    if (id !== prevId) {\n      this.loadData();\n    }\n  }\n\n  onValidityChange(event, valid) {\n    const { name } = event.target;\n    this.setState((prevState) => {\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\n      if (valid) delete invalidFields[name];\n      return { invalidFields };\n    });\n  }\n\n  onChange(event, naturalValue) {\n    const { name, value: textValue } = event.target;\n    const value = naturalValue === undefined ? textValue : naturalValue;\n    this.setState(prevState => ({\n      issue: { ...prevState.issue, [name]: value },\n    }));\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    this.showValidation();\n    const { issue, invalidFields } = this.state;\n    if (Object.keys(invalidFields).length !== 0) return;\n    const query = `mutation issueUpdate(\n      $id: Int!\n      $changes: IssueUpdateInputs!\n      ) {\n      issueUpdate(\n      id: $id\n      changes: $changes\n      ) {\n      id title status owner\n      effort created due description\n      }\n      }`;\n    const { id, created, ...changes } = issue;\n    const data = await graphQLFetch(query, { changes, id }, this.showError);\n    if (data) {\n      this.setState({ issue: data.issueUpdate });\n      this.showSuccess('Updated issue successfully');\n    }\n  }\n\n  async loadData() {\n    const { match } = this.props;\n    const data = await IssueEdit.fetchData(match, null, this.showError);\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\n  }\n\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { issue } = this.state;\n    if (issue == null) return null;\n\n    const { issue: { id } } = this.state;\n    const { match: { params: { id: propsId } } } = this.props;\n    const { toastVisible, toastMessage, toastType } = this.state;\n    if (id == null) {\n      if (propsId != null) {\n        return <h3>{`Issue with ID ${propsId} not found.`}</h3>;\n      }\n      return null;\n    }\n\n    const { issue: { title, status } } = this.state;\n    const { issue: { owner, effort, description } } = this.state;\n    const { issue: { created, due } } = this.state;\n    const { invalidFields, showingValidation } = this.state;\n    let validationMessage;\n\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fields before submitting.\n        </Alert>\n      );\n    }\n    return (\n      <Panel>\n        <Panel.Heading>\n          <Panel.Title>{`Editing issue: ${id}`}</Panel.Title>\n        </Panel.Heading>\n        <Panel.Body>\n          <Form horizontal onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Created</Col>\n              <Col sm={9}>\n                <FormControl.Static>\n                  {created.toDateString()}\n                </FormControl.Static>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Status</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass=\"select\"\n                  name=\"status\"\n                  value={status}\n                  onChange={this.onChange}\n                >\n                  <option value=\"New\">New</option>\n                  <option value=\"Assigned\">Assigned</option>\n                  <option value=\"Fixed\">Fixed</option>\n                  <option value=\"Closed\">Closed</option>\n                </FormControl>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Owner</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  name=\"owner\"\n                  value={owner}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Effort</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={NumInput}\n                  name=\"effort\"\n                  value={effort}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup validationState={\n              invalidFields.due ? 'error' : null\n            }\n            >\n              <Col componentClass={ControlLabel} sm={3}>Due</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={DateInput}\n                  onValidityChange={this.onValidityChange}\n                  name=\"due\"\n                  value={due}\n                  onChange={this.onChange}\n                  key={id}\n                />\n                <FormControl.Feedback />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Title</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  size={50}\n                  name=\"title\"\n                  value={title}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Description</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  tag=\"textarea\"\n                  rows={4}\n                  cols={50}\n                  name=\"description\"\n                  value={description}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={6}>\n                <ButtonToolbar>\n                  <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\n                  <LinkContainer to=\"/issues\">\n                    <Button bsStyle=\"link\">Back</Button>\n                  </LinkContainer>\n                </ButtonToolbar>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={9}>{validationMessage}</Col>\n            </FormGroup>\n          </Form>\n        </Panel.Body>\n        <Panel.Footer>\n          <Link to={`/edit/${id - 1}`}>Prev</Link>\n          {' | '}\n          <Link to={`/edit/${id + 1}`}>Next</Link>\n        </Panel.Footer>\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </Panel>\n    );\n  }\n}\n"],"sourceRoot":""}