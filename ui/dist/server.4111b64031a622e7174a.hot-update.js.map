{"version":3,"sources":["webpack:///./src/IssueList.jsx","webpack:///./src/withToast.jsx"],"names":["IssueList","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","query","data","graphQLFetch","constructor","issues","store","initialData","issueList","selectedIssue","issue","state","closeIssue","bind","deleteIssue","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","props","setState","index","prevState","newList","issueUpdate","pathname","history","showSuccess","issueDelete","push","splice","render","IssueListWithToast","withToast","OriginalComponent","ToastWrapper","toastVisible","toastMessage","toastType","dismissToast","message"],"mappings":"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","file":"server.4111b64031a622e7174a.hot-update.js","sourcesContent":["\n/* eslint \"react/jsx-no-undef\": \"off\" */\n\nimport React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Panel } from 'react-bootstrap';\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport IssueDetail from './IssueDetail.jsx';\nimport withToast from './withToast.jsx';\nimport store from './store.js';\n\nclass IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = { hasSelection: false, selectedId: 0 };\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const { params: { id } } = match;\n    const idInt = parseInt(id, 10);\n    if (!Number.isNaN(idInt)) {\n      vars.hasSelection = true;\n      vars.selectedId = idInt;\n    }\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n      $hasSelection: Boolean!\n      $selectedId: Int!\n      ) {\n      issueList (\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n        ) {\n        id title status owner\n        created effort due\n      }\n      issue(id: $selectedId) @include (if : $hasSelection) {\n        id description\n       }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor() {\n    super();\n    const issues = store.initialData ? store.initialData.issueList : null;\n    const selectedIssue = store.initialData ? store.initialData.issue : null;\n    delete store.initialData;\n    this.state = {\n      issues,\n      selectedIssue,\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n  }\n\n  componentDidMount() {\n    const { issues } = this.state;\n    if (issues == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      location: { search: prevSearch },\n      match: { params: { id: prevId } },\n    } = prevProps;\n    const { location: { search }, match: { params: { id } } } = this.props;\n    if (prevSearch !== search || prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search }, match, showError } = this.props;\n    const data = await IssueList.fetchData(match, search, showError);\n    if (data) {\n      this.setState({ issues: data.issueList, selectedIssue: data.issue });\n    }\n  }\n\n  async closeIssue(index) {\n    const query = `mutation issueClose($id: Int!) {\n    issueUpdate(id: $id, changes: { status: Closed }) {\n    id title status owner\n    effort created due description\n    }\n    }`;\n    const { issues } = this.state;\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!) {\n      issueDelete(id: $id)\n    }`;\n    const { issues } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { id } = issues[index];\n    const { showSuccess, showError } = this.props;\n    const data = await graphQLFetch(query, { id }, showError);\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        return { issues: newList };\n      });\n      showSuccess(`Deleted issue ${id} successfully.`);\n    } else {\n      this.loadData();\n    }\n  }\n\n  render() {\n    const { issues } = this.state;\n    if (issues == null) return null;\n    const { selectedIssue } = this.state;\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter />\n          </Panel.Body>\n        </Panel>\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n        <IssueDetail issue={selectedIssue} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst IssueListWithToast = withToast(IssueList);\nIssueListWithToast.fetchData = IssueList.fetchData;\n\nexport default IssueListWithToast;\n\n","import React from 'react';\nimport Toast from './Toast.jsx';\n\nexport default function withToast(OriginalComponent) {\n  return class ToastWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        toastVisible: false, toastMessage: '', toastType: 'success',\n      };\n      this.showSuccess = this.showSuccess.bind(this);\n      this.showError = this.showError.bind(this);\n      this.dismissToast = this.dismissToast.bind(this);\n    }\n\n    showSuccess(message) {\n      this.setState({ toastVisible: true, toastMessage: message, toastType: 'success'});\n    }\n\n    showError(message) {\n      this.setState({ toastVisible: true, toastMessage: message, toastType: 'danger'});\n    }\n\n    dismissToast() {\n      this.setState({ toastVisible: false});\n    }\n\n    render() {\n      const { toastType, toastVisible, toastMessage } = this.state;\n      return (\n        <React.Fragment>\n          <OriginalComponent\n            showError={this.showError}\n            showSuccess={this.showSuccess}\n            dismissToast={this.dismissToast}\n            {...this.props}\n          />\n          <Toast\n            bsStyle={toastType}\n            showing={toastVisible}\n            onDismiss={this.dismissToast}\n          >\n            {toastMessage}\n          </Toast>\n        </React.Fragment>\n      );\n    }\n  };\n}\n"],"sourceRoot":""}