{"version":3,"sources":["webpack:///./server/render.jsx"],"names":["render","req","res","activeRoute","routes","find","route","matchPath","path","initialData","component","fetchData","match","index","url","indexOf","search","substr","console","log","store","element","body","ReactDOMServer","renderToString","send","template"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,WAAW,GAAGC,sDAAM,CAACC,IAAP,CAClBC,KAAK,IAAIC,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWF,KAAX,CADA,CAApB;AAIA,MAAIG,WAAJ;;AACA,MAAIN,WAAW,IAAIA,WAAW,CAACO,SAAZ,CAAsBC,SAAzC,EAAoD;AAClD,UAAMC,KAAK,GAAGL,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWL,WAAX,CAAvB;AACA,UAAMU,KAAK,GAAGZ,GAAG,CAACa,GAAJ,CAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,UAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,CAAX,GAAeZ,GAAG,CAACa,GAAJ,CAAQG,MAAR,CAAeJ,KAAf,CAAf,GAAuC,IAAtD;AACAJ,eAAW,GAAG,MAAMN,WAAW,CAACO,SAAZ,CAAsBC,SAAtB,CAAgCC,KAAhC,EAAuCI,MAAvC,CAApB;AACAE,WAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,WAAO,CAACC,GAAR,CAAYV,WAAZ;AACD;;AAEDW,uDAAK,CAACX,WAAN,GAAoBA,WAApB;AACA,QAAMY,OAAO,gBACX,2DAAC,6DAAD;AAAc,YAAQ,EAAEpB,GAAG,CAACa,GAA5B;AAAiC,WAAO,EAAE;AAA1C,kBACE,2DAAC,qDAAD,OADF,CADF;AAKA,QAAMQ,IAAI,GAAGC,uDAAc,CAACC,cAAf,CAA8BH,OAA9B,CAAb;AACAnB,KAAG,CAACuB,IAAJ,CAASC,4DAAQ,CAACJ,IAAD,EAAOb,WAAP,CAAjB;AACD;;AAEcT,qEAAf,E","file":"server.9d71ffcccdf0d44df3d9.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { StaticRouter, matchPath } from 'react-router-dom';\n\nimport Page from '../src/Page.jsx';\nimport template from './template.js';\nimport store from '../src/store.js';\nimport routes from '../src/routes.js';\n\nasync function render(req, res) {\n  const activeRoute = routes.find(\n    route => matchPath(req.path, route),\n  );\n\n  let initialData;\n  if (activeRoute && activeRoute.component.fetchData) {\n    const match = matchPath(req.path, activeRoute);\n    const index = req.url.indexOf('?');\n    const search = index !== -1 ? req.url.substr(index) : null;\n    initialData = await activeRoute.component.fetchData(match, search);\n    console.log('ini')\n    console.log(initialData)\n  }\n\n  store.initialData = initialData;\n  const element = (\n    <StaticRouter location={req.url} context={{}}>\n      <Page />\n    </StaticRouter>\n  );\n  const body = ReactDOMServer.renderToString(element);\n  res.send(template(body, initialData));\n}\n\nexport default render;\n"],"sourceRoot":""}