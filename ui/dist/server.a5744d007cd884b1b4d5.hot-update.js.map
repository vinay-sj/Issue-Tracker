{"version":3,"sources":["webpack:///./server/uiserver.js"],"names":["app","express","SourceMapSupport","install","dotenv","config","enableHMR","process","env","ENABLE_HMR","console","log","webpack","require","devMiddleware","hotMiddleware","entry","push","plugins","HotModuleReplacementPlugin","compiler","use","static","apiProxyTarget","API_PROXY_TARGET","proxy","target","UI_API_ENDPOINT","UI_SERVER_API_ENDPOINT","get","req","res","send","JSON","stringify","next","render","sendFile","path","resolve","port","UI_SERVER_PORT","listen","module","hot","accept"],"mappings":"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","file":"server.a5744d007cd884b1b4d5.hot-update.js","sourcesContent":["import dotenv from 'dotenv';\nimport path from 'path';\nimport express from 'express';\nimport proxy from 'http-proxy-middleware';\nimport SourceMapSupport from 'source-map-support';\nimport render from './render.jsx';\n\nconst app = express();\n\nSourceMapSupport.install();\ndotenv.config();\n\nconst enableHMR = (process.env.ENABLE_HMR || 'true') === 'true';\n\nif (enableHMR && (process.env.NODE_ENV !== 'production')) {\n  console.log('Adding dev middleware, enabling HMR');\n  /* eslint \"global-require\": \"off\" */\n  /* eslint \"import/no-extraneous-dependencies\": \"off\" */\n  const webpack = require('webpack');\n  const devMiddleware = require('webpack-dev-middleware');\n  const hotMiddleware = require('webpack-hot-middleware');\n\n  const config = require('../webpack.config.js')[0];\n  config.entry.app.push('webpack-hot-middleware/client');\n  config.plugins = config.plugins || [];\n  config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n  const compiler = webpack(config);\n  app.use(devMiddleware(compiler));\n  app.use(hotMiddleware(compiler));\n}\n\napp.use(express.static('public'));\n\nconst apiProxyTarget = process.env.API_PROXY_TARGET;\nif (apiProxyTarget) {\n  app.use('/graphql', proxy({ target: apiProxyTarget }));\n}\n\n// const UI_API_ENDPOINT = process.env.UI_API_ENDPOINT\n//   || 'http://localhost:3000/graphql';\n// const env = { UI_API_ENDPOINT };\n\nif (!process.env.UI_API_ENDPOINT) {\n  process.env.UI_API_ENDPOINT = 'http://localhost:3000/graphql';\n}\n\nif (!process.env.UI_SERVER_API_ENDPOINT) {\n  process.env.UI_SERVER_API_ENDPOINT = process.env.UI_API_ENDPOINT;\n}\n\napp.get('/env.js', (req, res) => {\n  const env = { UI_API_ENDPOINT: process.env.UI_API_ENDPOINT }\n  res.send(`window.ENV = ${JSON.stringify(env)}`);\n});\n\napp.get('/about', (req, res, next) => {\n  render(req, res, next);\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('public/index.html'));\n});\n\nconst port = process.env.UI_SERVER_PORT || 8000;\napp.listen(port, () => {\n  console.log(`UI started on port ${port}`);\n});\n\nif (module.hot) {\n  module.hot.accept('./render.jsx');\n}\n"],"sourceRoot":""}