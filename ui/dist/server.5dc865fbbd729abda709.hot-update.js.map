{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["IssueList","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","query","data","graphQLFetch","constructor","issues","store","initialData","issueList","selectedIssue","issue","state","toastVisible","toastMessage","toastType","closeIssue","bind","deleteIssue","showSuccess","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","props","setState","index","prevState","newList","issueUpdate","pathname","history","issueDelete","push","splice","message","render"],"mappings":"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","file":"server.5dc865fbbd729abda709.hot-update.js","sourcesContent":["import React from 'react';\nimport { Panel } from 'react-bootstrap';\nimport URLSearchParams from 'url-search-params';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\n\nexport default class IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = { hasSelection: false, selectedId: 0 };\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const { params: { id } } = match;\n    const idInt = parseInt(id, 10);\n    if (!Number.isNaN(idInt)) {\n      vars.hasSelection = true;\n      vars.selectedId = idInt;\n    }\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n      $hasSelection: Boolean!\n      $selectedId: Int!\n    ) {\n      issueList(\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n      ) {\n        id title status owner\n        created effort due\n      }\n      issue(id: $selectedId) @include (if : $hasSelection) {\n        id description\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor() {\n    super();\n    const issues = store.initialData ? store.initialData.issueList : null;\n    const selectedIssue = store.initialData\n      ? store.initialData.issue\n      : null;\n    delete store.initialData;\n    this.state = {\n      issues,\n      selectedIssue,\n      toastVisible: false,\n      toastMessage: '',\n      toastType: 'info',\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMount() {\n    const { issues } = this.state;\n    if (issues == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      location: { search: prevSearch },\n      match: { params: { id: prevId } },\n    } = prevProps;\n    const { location: { search }, match: { params: { id } } } = this.props;\n    if (prevSearch !== search || prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search }, match } = this.props;\n    const data = await IssueList.fetchData(match, search, this.showError);\n    if (data) {\n      this.setState({ issues: data.issueList, selectedIssue: data.issue });\n    }\n  }\n\n  async closeIssue(index) {\n    const query = `mutation issueClose($id: Int!) {\n      issueUpdate(id: $id, changes: { status: Closed }) {\n        id title status owner\n        effort created due description\n      }\n    }`;\n    const { issues } = this.state;\n    const data = await graphQLFetch(query, { id: issues[index].id },\n      this.showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!) {\n      issueDelete(id: $id)\n    }`;\n    const { issues } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { id } = issues[index];\n    const data = await graphQLFetch(query, { id }, this.showError);\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        return { issues: newList };\n      });\n      this.showSuccess(`Deleted issue ${id} successfully.`);\n    } else {\n      this.loadData();\n    }\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { issues } = this.state;\n    if (issues == null) return null;\n    const { toastVisible, toastType, toastMessage } = this.state;\n    const { selectedIssue } = this.state;\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter />\n          </Panel.Body>\n        </Panel>\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n        <IssueDetail issue={selectedIssue} />\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </React.Fragment>\n    );\n  }\n}"],"sourceRoot":""}