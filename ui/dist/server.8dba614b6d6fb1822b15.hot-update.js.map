{"version":3,"sources":["webpack:///./src/IssueReport.jsx"],"names":["statuses","IssueReport","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","get","status","effortMin","parseInt","Number","isNaN","effortMax","query","data","graphQLFetch","constructor","props","stats","store","initialData","issueCounts","state","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","setState","render","headerColumns","map","statRows","counts","owner","IssueReportWithToast","withToast"],"mappings":"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","file":"server.8dba614b6d6fb1822b15.hot-update.js","sourcesContent":["import React from 'react';\nimport { Panel, Table } from 'react-bootstrap';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport withToast from './withToast.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport store from './store.js';\n\nconst statuses = ['New', 'Assigned', 'Fixed', 'Closed'];\n\nclass IssueReport extends React.Component {\n  static async  fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = { };\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n      ) {\n      issueCounts(\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n        ) {\n        owner New Assigned Fixed Closed\n      }\n    }`;\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor(props) {\n    super(props);\n    const stats = store.initialData ? store.initialData.issueCounts : null;\n    delete store.initialData;\n    this.state = { stats };\n  }\n\n  componentDidMount() {\n    const { stats } = this.state;\n    if (stats == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n    if (prevSearch !== search) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search } , match, showError } = this.props;\n    const data = await IssueReport.fetchData(match, search, showError);\n    if(data) {\n      this.setState({ stats: data.issueCounts });\n    }\n  }\n\n  render() {\n    const { stats } = this.state;\n    if (stats == null) return null;\n\n    const headerColumns = (\n      statuses.map(status => (\n        <th key={status}>{status}</th>\n      ))\n    );\n\n    const statRows = stats.map(counts => (\n      <tr key={counts.owner}>\n        <td>{counts.owner}</td>\n        {statuses.map(status => (\n          <td key={status}>{counts[status]}</td>\n        ))}\n      </tr>\n    ));\n\n    return (\n      <>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter urlBase=\"/report\" />\n          </Panel.Body>\n        </Panel>\n        <Table bordered condensed hover responsive>\n          <thead>\n            <tr>\n              <th />\n              {headerColumns}\n            </tr>\n          </thead>\n          <tbody>\n            {statRows}\n          </tbody>\n        </Table>\n      </>\n    );\n  }\n}\n\nconst IssueReportWithToast = withToast(IssueReport);\nIssueReportWithToast.fetchData = IssueReport.fetchData;\n\nexport default IssueReportWithToast;\n"],"sourceRoot":""}