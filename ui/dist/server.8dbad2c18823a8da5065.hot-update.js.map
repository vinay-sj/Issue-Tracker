{"version":3,"sources":["webpack:///./src/Page.jsx","webpack:///./src/Search.jsx"],"names":["NavBar","Footer","Page"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;;AAEA,SAASA,MAAT,GAAkB;AAChB,sBACE,2DAAC,sDAAD,qBACE,2DAAC,sDAAD,CAAQ,MAAR,qBACE,2DAAC,sDAAD,CAAQ,KAAR,wBADF,CADF,eAIE,2DAAC,mDAAD,qBACE,2DAAC,oEAAD;AAAe,SAAK,MAApB;AAAqB,MAAE,EAAC;AAAxB,kBACE,2DAAC,uDAAD,eADF,CADF,eAIE,2DAAC,oEAAD;AAAe,MAAE,EAAC;AAAlB,kBACE,2DAAC,uDAAD,qBADF,CAJF,eAOE,2DAAC,oEAAD;AAAe,MAAE,EAAC;AAAlB,kBACE,2DAAC,uDAAD,iBADF,CAPF,CAJF,eAeE,2DAAC,mDAAD;AAAK,MAAE,EAAE;AAAT,kBACE,2DAAC,MAAD,CAAQ,IAAR,OADF,CAfF,eAoBE,2DAAC,mDAAD;AAAK,aAAS;AAAd,kBACE,2DAAC,4DAAD,OADF,eAEE,2DAAC,2DAAD;AACE,MAAE,EAAC,eADL;AAEE,SAAK,eAAE,2DAAC,yDAAD;AAAW,WAAK,EAAC;AAAjB,MAFT;AAGE,WAAO;AAHT,kBAKE,2DAAC,oEAAD;AAAe,MAAE,EAAC;AAAlB,kBACE,2DAAC,wDAAD,gBADF,CALF,CAFF,CApBF,CADF;AAmCD;;AAED,SAASC,MAAT,GAAkB;AAChB,sBACE,uFACE,sEADF,eAEE;AAAG,aAAS,EAAC;AAAb,2CAEG,GAFH,eAGE;AAAG,QAAI,EAAC;AAAR,yBAHF,CAFF,CADF;AAYD;;AAEc,SAASC,IAAT,GAAgB;AAC7B,sBACE,qFACE,2DAAC,MAAD,OADF,eAEE,2DAAC,oDAAD;AAAM,SAAK;AAAX,kBACE,2DAAC,qDAAD,OADF,CAFF,eAKE,2DAAC,MAAD,OALF,CADF;AASD,C;;;;;;;;;;;AC1ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD","file":"server.8dbad2c18823a8da5065.hot-update.js","sourcesContent":["import React from 'react';\nimport {\n  Navbar, Nav, NavItem, NavDropdown,\n  MenuItem, Glyphicon,\n  Grid, Col,\n} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Contents from './Contents.jsx';\nimport IssueAddNavItem from './IssueAddNavItem.jsx';\nimport Search from './Search.jsx';\n\nfunction NavBar() {\n  return (\n    <Navbar>\n      <Navbar.Header>\n        <Navbar.Brand>Issue Tracker</Navbar.Brand>\n      </Navbar.Header>\n      <Nav>\n        <LinkContainer exact to=\"/\">\n          <NavItem>Home</NavItem>\n        </LinkContainer>\n        <LinkContainer to=\"/issues\">\n          <NavItem>Issue List</NavItem>\n        </LinkContainer>\n        <LinkContainer to=\"/report\">\n          <NavItem>Report</NavItem>\n        </LinkContainer>\n      </Nav>\n      <Col sm={5}>\n        <NavBar.Form>\n          {/*<Search />*/}\n        </NavBar.Form>\n      </Col>\n      <Nav pullRight>\n        <IssueAddNavItem />\n        <NavDropdown\n          id=\"user-dropdown\"\n          title={<Glyphicon glyph=\"option-vertical\" />}\n          noCaret\n        >\n          <LinkContainer to=\"/about\">\n            <MenuItem>About</MenuItem>\n          </LinkContainer>\n        </NavDropdown>\n      </Nav>\n    </Navbar>\n  );\n}\n\nfunction Footer() {\n  return (\n    <small>\n      <hr />\n      <p className=\"text-center\">\n        Full source code available at this\n        {' '}\n        <a href=\"https://github.ccs.neu.edu/NEU-CS5610-SU20/VinayJoseph-Book\">\n          GitHub repository\n        </a>\n      </p>\n    </small>\n  );\n}\n\nexport default function Page() {\n  return (\n    <div>\n      <NavBar />\n      <Grid fluid>\n        <Contents />\n      </Grid>\n      <Footer />\n    </div>\n  );\n}\n","// import React from 'react';\r\n// import SelectAsync from 'react-select/lib/Async'; // eslint-disable-line\r\n// import { withRouter } from 'react-router-dom';\r\n//\r\n// import graphQLFetch from './graphQLFetch.js';\r\n// import withToast from './withToast.jsx';\r\n//\r\n// class Search extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.onChangeSelection = this.onChangeSelection.bind(this);\r\n//     this.loadOptions = this.loadOptions.bind(this);\r\n//   }\r\n//\r\n//   onChangeSelection({ value }) {\r\n//     const { history } = this.props;\r\n//     history.push(`/edit/${value}`);\r\n//   }\r\n//\r\n//   async loadOptions(term) {\r\n//     if (term.length < 3) return [];\r\n//     const query = `query issueList($search: String) {\r\n//       issueList(search: $search) {\r\n//         issues {id title}\r\n//       }\r\n//     }`;\r\n//\r\n//     const { showError } = this.props;\r\n//     const data = await graphQLFetch(query, { search: term }, showError);\r\n//     return data.issueList.issues.map(issue => ({\r\n//       label: `#${issue.id}: ${issue.title}`, value: issue.id,\r\n//     }));\r\n//   }\r\n//\r\n//   render() {\r\n//     return (\r\n//       <SelectAsync\r\n//         instanceId=\"search-select\"\r\n//         value=\"\"\r\n//         loadOptions={this.loadOptions}\r\n//         filterOptions={() => true}\r\n//         onChange={this.onChangeSelection}\r\n//         components={{ DropdownIndicator: null }}\r\n//       />\r\n//     );\r\n//   }\r\n// }\r\n//\r\n// export default withRouter(withToast(Search));\r\n"],"sourceRoot":""}