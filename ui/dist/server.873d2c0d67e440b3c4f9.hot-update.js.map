{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["IssueList","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","get","status","effortMin","parseInt","Number","isNaN","effortMax","query","data","graphQLFetch","constructor","issues","store","initialData","issueList","state","toastVisible","toastMessage","toastType","closeIssue","bind","deleteIssue","showSuccess","dismissToast","componentDidMount","loadData","console","log","componentDidUpdate","prevProps","location","prevSearch","props","setState","index","id","prevState","newList","issueUpdate","pathname","history","issueDelete","push","splice","message","render","path","IssueDetail"],"mappings":"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","file":"server.873d2c0d67e440b3c4f9.hot-update.js","sourcesContent":["\n/* eslint \"react/jsx-no-undef\": \"off\" */\n\nimport React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Route } from 'react-router-dom';\nimport { Panel } from 'react-bootstrap';\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport IssueDetail from './IssueDetail.jsx';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\n\nexport default class IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = {};\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const query = `query issueList(\n      $status: StatusType\n      $effortMin: Int\n      $effortMax: Int\n      ) {\n      issueList (\n        status: $status\n        effortMin: $effortMin\n        effortMax: $effortMax\n        ) {\n        id title status owner\n        created effort due\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n  constructor() {\n    super();\n    const issues = store.initialData ? store.initialData.issueList : null;\n    delete store.initialData;\n    this.state = {\n      issues,\n      toastVisible: false,\n      toastMessage: ' ',\n      toastType: 'info',\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMount() {\n    const { issues } = this.state;\n\n    if (issues == null) this.loadData();\n    console.log('hi')\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n    if (prevSearch !== search) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search } } = this.props;\n    const data = await IssueList.fetchData(null, search, this.showError);\n    if (data) {\n      this.setState({ issues: data.issueList });\n    }\n  }\n\n  async closeIssue(index) {\n    const query = `mutation issueClose($id: Int!) {\n    issueUpdate(id: $id, changes: { status: Closed }) {\n    id title status owner\n    effort created due description\n    }\n    }`;\n    const { issues } = this.state;\n    const data = await graphQLFetch(query, { id: issues[index].id }, this.showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!) {\n      issueDelete(id: $id)\n    }`;\n    const { issues } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { id } = issues[index];\n    const data = await graphQLFetch(query, { id }, this.showError);\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        return { issues: newList };\n      });\n      this.showSuccess(`Deleted issue ${id} successfully.`);\n    } else {\n      this.loadData();\n    }\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { issues } = this.state;\n    if(issues == null) return null;\n    const { match } = this.props;\n    const { toastVisible, toastType, toastMessage } = this.state;\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter />\n          </Panel.Body>\n        </Panel>\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n        <Route path={`${match.path}/:id`} component={IssueDetail} />\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}