{"version":3,"sources":["webpack:///./src/Search.jsx"],"names":["Search","React","Component","constructor","props","onChangeSelection","bind","loadOptions","value","history","push","term","length","query","showError","data","graphQLFetch","search","issueList","issues","map","issue","label","id","title","render","DropdownIndicator","withRouter","withToast"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;CACkD;;AAClD;AACA;AACA;;AACA,MAAMA,MAAN,SAAqBC,4CAAK,CAACC,SAA3B,CAAqC;AACnCC,aAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDD,mBAAiB,CAAC;AAAEG;AAAF,GAAD,EAAY;AAC3B,UAAM;AAAEC;AAAF,QAAc,KAAKL,KAAzB;AACAK,WAAO,CAACC,IAAR,CAAa,gBAAb;AACD;;AACD,QAAMH,WAAN,CAAkBI,IAAlB,EAAwB;AACtB,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB,OAAO,EAAP;AACrB,UAAMC,KAAK,GAAI;;;;EAAf;AAKA,UAAM;AAAEC;AAAF,QAAgB,KAAKV,KAA3B;AACA,UAAMW,IAAI,GAAG,MAAMC,gEAAY,CAACH,KAAD,EAAQ;AAAEI,YAAM,EAAEN;AAAV,KAAR,EAA0BG,SAA1B,CAA/B;AACA,WAAOC,IAAI,CAACG,SAAL,CAAeC,MAAf,CAAsBC,GAAtB,CAA0BC,KAAK,KAAK;AACzCC,WAAK,EAAG,IAAGD,KAAK,CAACE,EAAG,KAAIF,KAAK,CAACG,KAAM,EADK;AACFhB,WAAK,EAAEa,KAAK,CAACE;AADX,KAAL,CAA/B,CAAP;AAGD;;AACDE,QAAM,GAAG;AACP,wBACE,2DAAC,6DAAD;AACE,gBAAU,EAAC,eADb;AAEE,WAAK,EAAC,EAFR;AAGE,iBAAW,EAAE,KAAKlB,WAHpB;AAIE,kBAAY,EAAE,MAAM,IAJtB;AAKE,cAAQ,EAAE,KAAKF,iBALjB;AAME,gBAAU,EAAE;AAAEqB,yBAAiB,EAAE;AAArB;AANd,MADF;AAUD;;AAlCkC;;AAqCtBC,kIAAU,CAACC,8DAAS,CAAC5B,MAAD,CAAV,CAAzB,E","file":"server.5350937ca4868d020816.hot-update.js","sourcesContent":["import React from 'react';\r\nimport SelectAsync from 'react-select/lib/Async'; // eslint-disable-line\r\nimport { withRouter } from 'react-router-dom';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport withToast from './withToast.jsx';\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSelection = this.onChangeSelection.bind(this);\r\n    this.loadOptions = this.loadOptions.bind(this);\r\n  }\r\n  onChangeSelection({ value }) {\r\n    const { history } = this.props;\r\n    history.push('/edit/${value}');\r\n  }\r\n  async loadOptions(term) {\r\n    if (term.length < 3) return [];\r\n    const query = `query issueList($search: String) {\r\nissueList(search: $search) {\r\nissues {id title}\r\n}\r\n}`;\r\n    const { showError } = this.props;\r\n    const data = await graphQLFetch(query, { search: term }, showError);\r\n    return data.issueList.issues.map(issue => ({\r\n      label: `#${issue.id}: ${issue.title}`, value: issue.id,\r\n    }));\r\n  }\r\n  render() {\r\n    return (\r\n      <SelectAsync\r\n        instanceId=\"search-select\"\r\n        value=\"\"\r\n        loadOptions={this.loadOptions}\r\n        filterOption={() => true}\r\n        onChange={this.onChangeSelection}\r\n        components={{ DropdownIndicator: null }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withToast(Search));\r\n"],"sourceRoot":""}