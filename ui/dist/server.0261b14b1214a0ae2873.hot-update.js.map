{"version":3,"sources":["webpack:///./server/render.jsx"],"names":["render","req","res","activeRoute","routes","find","route","matchPath","path","initialData","component","fetchData","match","index","url","indexOf","search","substr","headers","cookie","userData","Page","store","context","element","body","ReactDOMServer","renderToString","redirect","send","template"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,WAAW,GAAGC,sDAAM,CAACC,IAAP,CAClBC,KAAK,IAAIC,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWF,KAAX,CADA,CAApB;AAIA,MAAIG,WAAJ;;AACA,MAAIN,WAAW,IAAIA,WAAW,CAACO,SAAZ,CAAsBC,SAAzC,EAAoD;AAClD,UAAMC,KAAK,GAAGL,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWL,WAAX,CAAvB;AACA,UAAMU,KAAK,GAAGZ,GAAG,CAACa,GAAJ,CAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,UAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,CAAX,GAAeZ,GAAG,CAACa,GAAJ,CAAQG,MAAR,CAAeJ,KAAf,CAAf,GAAuC,IAAtD;AACAJ,eAAW,GAAG,MAAMN,WAAW,CAACO,SAAZ,CAAsBC,SAAtB,CAAgCC,KAAhC,EAAuCI,MAAvC,EAA+Cf,GAAG,CAACiB,OAAJ,CAAYC,MAA3D,CAApB;AACD;;AAED,QAAMC,QAAQ,GAAG,MAAMC,qDAAI,CAACV,SAAL,CAAeV,GAAG,CAACiB,OAAJ,CAAYC,MAA3B,CAAvB;AAEAG,uDAAK,CAACb,WAAN,GAAoBA,WAApB;AACAa,uDAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,QAAMG,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,gBACX,2DAAC,6DAAD;AAAc,YAAQ,EAAEvB,GAAG,CAACa,GAA5B;AAAiC,WAAO,EAAES;AAA1C,kBACE,2DAAC,qDAAD,OADF,CADF;AAKA,QAAME,IAAI,GAAGC,uDAAc,CAACC,cAAf,CAA8BH,OAA9B,CAAb;;AAEA,MAAID,OAAO,CAACT,GAAZ,EAAiB;AACfZ,OAAG,CAAC0B,QAAJ,CAAa,GAAb,EAAkBL,OAAO,CAACT,GAA1B;AACD,GAFD,MAEO;AACLZ,OAAG,CAAC2B,IAAJ,CAASC,4DAAQ,CAACL,IAAD,EAAOhB,WAAP,EAAoBW,QAApB,CAAjB;AACD;AACF;;AAEcpB,qEAAf,E","file":"server.0261b14b1214a0ae2873.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { StaticRouter, matchPath } from 'react-router-dom';\n\nimport Page from '../src/Page.jsx';\nimport template from './template.js';\nimport store from '../src/store.js';\nimport routes from '../src/routes.js';\n\nasync function render(req, res) {\n  const activeRoute = routes.find(\n    route => matchPath(req.path, route),\n  );\n\n  let initialData;\n  if (activeRoute && activeRoute.component.fetchData) {\n    const match = matchPath(req.path, activeRoute);\n    const index = req.url.indexOf('?');\n    const search = index !== -1 ? req.url.substr(index) : null;\n    initialData = await activeRoute.component.fetchData(match, search, req.headers.cookie);\n  }\n\n  const userData = await Page.fetchData(req.headers.cookie);\n\n  store.initialData = initialData;\n  store.userData = userData;\n  const context = {};\n  const element = (\n    <StaticRouter location={req.url} context={context}>\n      <Page />\n    </StaticRouter>\n  );\n  const body = ReactDOMServer.renderToString(element);\n\n  if (context.url) {\n    res.redirect(301, context.url);\n  } else {\n    res.send(template(body, initialData, userData));\n  }\n}\n\nexport default render;\n"],"sourceRoot":""}